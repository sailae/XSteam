import math
from functions.util.region_borders import *

# REGION 1
def v1_pT(pressure, temperature):
    R = 0.461526
      
    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    J1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31, -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228, -0.016616417199501, 0.00081214629983568, 0.00028319080123804, -0.00060706301565874, -0.018990068218419, -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -0.00047184321073267, -0.00030001780793026, 4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06, -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07, -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23, -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]

    ps = pressure / 16.53
    tau = 1386 / temperature
    g_p = 0
    
    for i in range(0, 33):
        g_p -= n1[i] * I1[i] * (7.1 - ps) ** (I1[i] - 1) * (tau - 1.222) ** J1[i]
    
    return R * temperature / pressure * ps * g_p / 1000

def h1_pT(pressure, temperature):
    R = 0.461526

    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31,
          32]
    J1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29,
          -31, -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872,
          0.15772038513228, -0.016616417199501, 0.00081214629983568, 0.00028319080123804, -0.00060706301565874,
          -0.018990068218419, -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -0.00047184321073267,
          -0.00030001780793026, 4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16,
          -3.1679644845054E-05, -2.8270797985312E-06, -8.5205128120103E-10, -2.2425281908E-06,
          -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07, -1.2734301741641E-09,
          -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23,
          -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]
    p = pressure / 16.53
    tau = 1386 / temperature
    g_t = 0

    for i in range(0, 33):
        g_t += (n1[i] * (7.1 - pressure) ** I1[i] * J1[i] * (tau - 1.222) ** (J1[i] - 1))

    return R * temperature * tau * g_t

def u1_pT(pressure, temperature):
    R = 0.461526

    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    J1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31, -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228, -0.016616417199501, 0.00081214629983568, 0.00028319080123804, -0.00060706301565874, -0.018990068218419, -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -0.00047184321073267, -0.00030001780793026, 4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06, -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07, -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23, -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]

    pressure = pressure / 16.53
    tau = 1386 / temperature
    g_t = 0
    g_p = 0

    for i in range(0, 33):
        g_p = g_p - n1[i] * I1[i] * (7.1 - pressure) ** (I1[i] - 1) * (tau - 1.222) ** J1[i]
        g_t = g_t + (n1[i] * (7.1 - pressure) ** I1[i] * J1[i] * (tau - 1.222) ** (J1[i] - 1))

    return R * temperature * (tau * g_t - pressure * g_p)

def s1_pT(pressure, temperature):

    R = 0.461526

    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31,
          32]
    J1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29,
          -31, -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872,
          0.15772038513228, -0.016616417199501, 0.00081214629983568, 0.00028319080123804, -0.00060706301565874,
          -0.018990068218419, -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -0.00047184321073267,
          -0.00030001780793026, 4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16,
          -3.1679644845054E-05, -2.8270797985312E-06, -8.5205128120103E-10, -2.2425281908E-06,
          -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07, -1.2734301741641E-09,
          -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23,
          -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]

    pressure = pressure / 16.53
    temperature = 1386 / temperature
    g = 0
    g_t = 0

    for i in range(0, 33):
        g_t += n1[i] * (7.1 - pressure) ** I1[i] * J1[i] * (temperature - 1.222) ** (J1[i] - 1)
        g += n1[i] * (7.1 - pressure) ** I1[i] * (temperature - 1.222) ** J1[i]

    return R * temperature * g_t - (R * g)

def Cp1_pT(pressure, temperature):
    R = 0.461526

    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    J1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31, -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228, -0.016616417199501, 0.00081214629983568, 0.00028319080123804, -0.00060706301565874, -0.018990068218419, -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -0.00047184321073267, -0.00030001780793026, 4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06, -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07, -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23, -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]

    pressure = pressure / 16.53
    temperature = 1386 / temperature
    G_tt = 0

    for i in range(0,33):
        G_tt = G_tt + (n1[i] * (7.1 - pressure) ** I1[i] * J1[i] * (J1[i] - 1) * (temperature - 1.222) ** (J1[i] - 2))

    return -R * temperature ** 2 * G_tt

def Cv1_pT(pressure, temperature):
    R = 0.461526

    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    J1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31, -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228, -0.016616417199501, 0.00081214629983568, 0.00028319080123804, -0.00060706301565874, -0.018990068218419, -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -0.00047184321073267, -0.00030001780793026, 4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06, -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07, -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23, -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]

    pressure = pressure / 16.53
    temperature = 1386 / temperature 

    g_p = 0
    g_pp = 0
    g_pt = 0
    G_tt = 0

    for i in range(0, 33):
        g_p = g_p - n1[i] * I1[i] * (7.1 - pressure) ** (I1[i] - 1) * (temperature - 1.222) ** J1[i]
        g_pp = g_pp + n1[i] * I1[i] * (I1[i] - 1) * (7.1 - pressure) ** (I1[i] - 2) * (temperature - 1.222) ** J1[i]
        g_pt = g_pt - n1[i] * I1[i] * (7.1 - pressure) ** (I1[i] - 1) * J1[i] * (temperature - 1.222) ** (J1[i] - 1)
        G_tt = G_tt + n1(i) * (7.1 - pressure) ** I1[i] * J1[i] * (J1[i] - 1) * (temperature - 1.222) ** (J1[i] - 2)

    return R * (-(temperature ** 2 * G_tt) + (g_p - temperature * g_pt) ** 2 / g_pp)

def w1_pT(pressure, temperature):
    R = 0.461526
    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 8, 8, 21, 23, 29, 30, 31, 32]
    J1 = [-2, -1, 0, 1, 2, 3, 4, 5, -9, -7, -1, 0, 1, 3, -3, 0, 1, 3, 17, -4, 0, 6, -5, -2, 10, -8, -11, -6, -29, -31, -38, -39, -40, -41]
    n1 = [0.14632971213167, -0.84548187169114, -3.756360367204, 3.3855169168385, -0.95791963387872, 0.15772038513228, -0.016616417199501, 0.00081214629983568, 0.00028319080123804, -0.00060706301565874, -0.018990068218419, -0.032529748770505, -0.021841717175414, -5.283835796993E-05, -0.00047184321073267, -0.00030001780793026, 4.7661393906987E-05, -4.4141845330846E-06, -7.2694996297594E-16, -3.1679644845054E-05, -2.8270797985312E-06, -8.5205128120103E-10, -2.2425281908E-06, -6.5171222895601E-07, -1.4341729937924E-13, -4.0516996860117E-07, -1.2734301741641E-09, -1.7424871230634E-10, -6.8762131295531E-19, 1.4478307828521E-20, 2.6335781662795E-23, -1.1947622640071E-23, 1.8228094581404E-24, -9.3537087292458E-26]

    pressure = pressure / 16.53
    tau = 1386 / temperature
    g_p = 0
    g_pp = 0
    g_pt = 0
    G_tt = 0

    for i in range(0,33):
        g_p = g_p - n1[i] * I1[i] * (7.1 - pressure) ** (I1[i] - 1) * (tau - 1.222) ** J1[i]
        g_pp = g_pp + n1[i] * I1[i] * (I1[i] - 1) * (7.1 - pressure) ** (I1[i] - 2) * (tau - 1.222) ** J1[i]
        g_pt = g_pt - n1[i] * I1[i] * (7.1 - pressure) ** (I1[i] - 1) * J1[i] * (tau - 1.222) ** (J1[i] - 1)
        G_tt = G_tt + n1[i] * (7.1 - pressure) ** I1[i] * J1[i] * (J1[i] - 1) * (tau - 1.222) ** (J1[i] - 2)
  
    return (1000 * R * temperature * g_p ** 2 / ((g_p - tau * g_pt) ** 2 / (tau ** 2 * G_tt) - g_pp)) ** 0.5

def T1_ph(pressure, enthalpy):
    I1 = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 4, 5, 6]
    J1 = [0, 1, 2, 6, 22, 32, 0, 1, 2, 3, 4, 10, 32, 10, 32, 10, 32, 32, 32, 32]
    n1 = [-238.72489924521, 404.21188637945, 113.49746881718, -5.8457616048039, -0.0001528548241314,
          -1.0866707695377E-06, -13.391744872602, 43.211039183559, -54.010067170506, 30.535892203916,
          -6.5964749423638, 0.0093965400878363, 1.157364750534E-07, -2.5858641282073E-05, -4.0644363084799E-09,
          6.6456186191635E-08, 8.0670734103027E-11, -9.3477771213947E-13, 5.8265442020601E-15,
          -1.5020185953503E-17]
    enthalpy = enthalpy / 2500
    temperature = 0

    for i in range(0, 19):
        temperature += n1[i] * pressure ** I1[i] * (enthalpy + 1) ** J1[i]

    return temperature

def T1_ps(pressure, entropy):

    I1 = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 4]
    J1 = [0, 1, 2, 3, 11, 31, 0, 1, 2, 3, 12, 31, 0, 1, 2, 9, 31, 10, 32, 32]
    n1 = [174.78268058307, 34.806930892873, 6.5292584978455, 0.33039981775489, -1.9281382923196E-07,
          -2.4909197244573E-23, -0.26107636489332, 0.22592965981586, -0.064256463395226, 0.0078876289270526,
          3.5672110607366E-10, 1.7332496994895E-24, 0.00056608900654837, -0.00032635483139717, 4.4778286690632E-05,
          -5.1322156908507E-10, -4.2522657042207E-26, 2.6400441360689E-13, 7.8124600459723E-29,
          -3.0732199903668E-31]

    T1_ps = 0

    for i in range(0, 19):
        T1_ps += n1[i] * pressure ** I1[i] * (entropy + 2) ** J1[i]

    return T1_ps

def p1_hs(enthalpy, entropy):
    I1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 4, 4, 5]
    J1 = [0, 1, 2, 4, 5, 6, 8, 14, 0, 1, 4, 6, 0, 1, 10, 4, 1, 4, 0]
    n1 = [-0.691997014660582, -18.361254878756, -9.28332409297335, 65.9639569909906, -16.2060388912024,
               450.620017338667, 854.68067822417, 6075.23214001162, 32.6487682621856, -26.9408844582931,
               -319.9478483343, -928.35430704332, 30.3634537455249, -65.0540422444146, -4309.9131651613,
               -747.512324096068, 730.000345529245, 1142.84032569021, -436.407041874559]
    enthalpy = enthalpy / 3400
    entropy = entropy / 7.6
    p = 0

    for i in range(0,18):
        p += n1[i] * (enthalpy + 0.05) ** I1[i] * (entropy + 0.05) ** J1[i]

    return p * 100

def T1_prho(pressure, density):
    low_bound = 273.15
    high_bound = T4_p(pressure)
    densities = 0

    while abs(density - densities) > 10 ** (-5):
        Ts = (low_bound + high_bound) / 2
        densities = 1 / v1_pT(pressure, Ts)
        if densities < density:
            high_bound = Ts
        else:
            low_bound = Ts


# REGION 2
def v2_pT(pressure, temperature):
    R = 0.461526

    J0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444, -4.383951131945, -0.28408632460772, 0.021268463753307]
    Ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18, 20, 20, 20, 21, 22, 23, 24, 24, 24]
    Jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50, 57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-0.0017731742473213, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793, -3.3032641670203E-05, -0.00018948987516315, -0.0039392777243355, -0.043797295650573, -2.6674547914087E-05, 2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -0.0015033924542148, -0.040668253562649, -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11, -0.0021171472321355, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739, 1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13, -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25, 3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15, 7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    tau = 540 / temperature
    g0_pi = 1 / pressure
    gr_pi = 0

    for i in range(0,42):
        gr_pi = gr_pi + nr[i] * Ir[i] * pressure ** (Ir[i] - 1) * (tau - 0.5) ** Jr[i]
    
    return R * temperature / pressure * pressure * (g0_pi + gr_pi) / 1000

def h2_pT(pressure, temperature):
    R = 0.461526

    J0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928,
          1.4240819171444, -4.383951131945, -0.28408632460772, 0.021268463753307]
    Ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16,
          18, 20, 20, 20, 21, 22, 23, 24, 24, 24]
    Jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14,
          29, 50, 57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-0.0017731742473213, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793,
          -3.3032641670203E-05, -0.00018948987516315, -0.0039392777243355, -0.043797295650573,
          -2.6674547914087E-05, 2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -0.0015033924542148,
          -0.040668253562649, -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06,
          -1.6714766451061E-11, -0.0021171472321355, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06,
          -0.038946842435739, 1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19,
          -1.0234747095929E-13, -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171,
          8.9185845355421E-25, 3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26,
          3.7826947613457E-06, -1.2768608934681E-15, 7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    tau = 540 / temperature
    g0_tau = 0  #

    for i in range(0, 8):
        g0_tau += n0[i] * J0[i] * tau ** (J0[i] - 1)

    gr_tau = 0

    for i in range(0, 42):
        gr_tau = gr_tau + nr[i] * pressure ** Ir[i] * Jr[i] * (tau - 0.5) ** (Jr[i] - 1)

    return R * temperature * tau * (g0_tau + gr_tau)

def u2_pT(pressure, temperature):
    R = 0.461526
    J0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444, -4.383951131945, -0.28408632460772, 0.021268463753307]
    Ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18, 20, 20, 20, 21, 22, 23, 24, 24, 24]
    Jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50, 57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-0.0017731742473213, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793, -3.3032641670203E-05, -0.00018948987516315, -0.0039392777243355, -0.043797295650573, -2.6674547914087E-05, 2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -0.0015033924542148, -0.040668253562649, -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11, -0.0021171472321355, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739, 1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13, -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25, 3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15, 7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    tau = 540 / temperature
    g0_pi = 1 / pressure
    g0_tau = 0

    for i in range(0,8):
        g0_tau = g0_tau + n0[i] * J0[i] * tau ** (J0[i] - 1)

    gr_pi = 0
    gr_tau = 0

    for i in range(0,42):
        gr_pi = gr_pi + nr[i] * Ir[i] * pressure ** (Ir[i] - 1) * (tau - 0.5) ** Jr(i)
        gr_tau = gr_tau + nr[i] * pressure ** Ir[i] * Jr[i] * (tau - 0.5) ** (Jr[i] - 1)

    return R * temperature * (tau * (g0_tau + gr_tau) - pressure * (g0_pi + gr_pi))

def s2_pT(pressure, temperature):

    R = 0.461526

    J0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928,
          1.4240819171444, -4.383951131945, -0.28408632460772, 0.021268463753307]
    Ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16,
          18, 20, 20, 20, 21, 22, 23, 24, 24, 24]
    Jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14,
          29, 50, 57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-0.0017731742473213, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793,
          -3.3032641670203E-05, -0.00018948987516315, -0.0039392777243355, -0.043797295650573,
          -2.6674547914087E-05, 2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -0.0015033924542148,
          -0.040668253562649, -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06,
          -1.6714766451061E-11, -0.0021171472321355, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06,
          -0.038946842435739, 1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19,
          -1.0234747095929E-13, -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171,
          8.9185845355421E-25, 3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26,
          3.7826947613457E-06, -1.2768608934681E-15, 7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]

    tau = 540 / temperature
    g0 = math.log(pressure)
    g0_tau = 0

    for i in range(0, 8):
        g0 += n0[i] * tau ** J0[i]
        g0_tau += n0[i] * J0[i] * tau ** (J0[i] - 1)

    gr = 0
    gr_tau = 0

    for i in range(0, 42):
        gr += nr[i] * pressure ** Ir[i] * (tau - 0.5) ** Jr[i]
        gr_tau += nr[i] * pressure ** Ir[i] * Jr[i] * (tau - 0.5) ** (Jr[i] - 1)

    return R * (tau * (g0_tau + gr_tau) - (g0 + gr))

def Cp2_pT(pressure, temperature):
    R = 0.461526

    J0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444, -4.383951131945, -0.28408632460772, 0.021268463753307]
    Ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18, 20, 20, 20, 21, 22, 23, 24, 24, 24]
    Jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50, 57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-0.0017731742473213, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793, -3.3032641670203E-05, -0.00018948987516315, -0.0039392777243355, -0.043797295650573, -2.6674547914087E-05, 2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -0.0015033924542148, -0.040668253562649, -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11, -0.0021171472321355, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739, 1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13, -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25, 3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15, 7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    tau = 540 / temperature
    g0_tautau = 0

    for i in range(0,8):
        g0_tautau += n0[i] * J0[i] * (J0[i] - 1) * tau ** (J0[i] - 2)

    gr_tautau = 0

    for i in range(0, 42):
        gr_tautau += nr[i] * pressure ** Ir[i] * Jr[i] * (Jr[i] - 1) * (tau - 0.5) ** (Jr[i] - 2)

    return -R * tau ** 2 * (g0_tautau + gr_tautau)

def Cv2_pT(pressure, temperature):
    R = 0.461526

    J0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444, -4.383951131945, -0.28408632460772, 0.021268463753307]
    Ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18, 20, 20, 20, 21, 22, 23, 24, 24, 24]
    Jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50, 57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-0.0017731742473213, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793, -3.3032641670203E-05, -0.00018948987516315, -0.0039392777243355, -0.043797295650573, -2.6674547914087E-05, 2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -0.0015033924542148, -0.040668253562649, -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11, -0.0021171472321355, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739, 1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13, -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25, 3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15, 7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    tau = 540 / temperature
    g0_tautau = 0

    for i in range(0, 8):
        g0_tautau += n0[i] * J0[i] * (J0[i] - 1) * tau ** (J0[i] - 2)

    gr_pi = 0
    gr_pitau = 0
    gr_pipi = 0
    gr_tautau = 0

    for i in range(0,42):
        gr_pi = gr_pi + nr[i] * Ir[i] * pressure ** (Ir[i] - 1) * (tau - 0.5) ** Jr[i]
        gr_pipi = gr_pipi + nr[i] * Ir[i] * (Ir[i] - 1) * pressure ** (Ir[i] - 2) * (tau - 0.5) ** Jr[i]
        gr_pitau = gr_pitau + nr[i] * Ir[i] * pressure ** (Ir[i] - 1) * Jr[i] * (tau - 0.5) ** (Jr[i] - 1)
        gr_tautau = gr_tautau + nr[i] * pressure ** Ir[i] * Jr[i] * (Jr[i] - 1) * (tau - 0.5) ** (Jr[i] - 2)
    
    return R * (-(tau ** 2 * (g0_tautau + gr_tautau)) - ((1 + pressure * gr_pi - tau * pressure * gr_pitau) ** 2) / (1 - pressure ** 2 * gr_pipi))

def w2_pT(pressure, temperature):
    R = 0.461526

    J0 = [0, 1, -5, -4, -3, -2, -1, 2, 3]
    n0 = [-9.6927686500217, 10.086655968018, -0.005608791128302, 0.071452738081455, -0.40710498223928, 1.4240819171444, -4.383951131945, -0.28408632460772, 0.021268463753307]
    Ir = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 5, 6, 6, 6, 7, 7, 7, 8, 8, 9, 10, 10, 10, 16, 16, 18, 20, 20, 20, 21, 22, 23, 24, 24, 24]
    Jr = [0, 1, 2, 3, 6, 1, 2, 4, 7, 36, 0, 1, 3, 6, 35, 1, 2, 3, 7, 3, 16, 35, 0, 11, 25, 8, 36, 13, 4, 10, 14, 29, 50, 57, 20, 35, 48, 21, 53, 39, 26, 40, 58]
    nr = [-0.0017731742473213, -0.017834862292358, -0.045996013696365, -0.057581259083432, -0.05032527872793, -3.3032641670203E-05, -0.00018948987516315, -0.0039392777243355, -0.043797295650573, -2.6674547914087E-05, 2.0481737692309E-08, 4.3870667284435E-07, -3.227767723857E-05, -0.0015033924542148, -0.040668253562649, -7.8847309559367E-10, 1.2790717852285E-08, 4.8225372718507E-07, 2.2922076337661E-06, -1.6714766451061E-11, -0.0021171472321355, -23.895741934104, -5.905956432427E-18, -1.2621808899101E-06, -0.038946842435739, 1.1256211360459E-11, -8.2311340897998, 1.9809712802088E-08, 1.0406965210174E-19, -1.0234747095929E-13, -1.0018179379511E-09, -8.0882908646985E-11, 0.10693031879409, -0.33662250574171, 8.9185845355421E-25, 3.0629316876232E-13, -4.2002467698208E-06, -5.9056029685639E-26, 3.7826947613457E-06, -1.2768608934681E-15, 7.3087610595061E-29, 5.5414715350778E-17, -9.436970724121E-07]
    tau = 540 / temperature
    g0_tautau = 0

    for i in range(0,8):
        g0_tautau = g0_tautau + n0[i] * J0[i] * (J0[i] - 1) * tau ** (J0[i] - 2)

    gr_pi = 0
    gr_pitau = 0
    gr_pipi = 0
    gr_tautau = 0

    for i in range(0, 42):
        gr_pi = gr_pi + nr[i] * Ir[i] * pressure ** (Ir[i] - 1) * (tau - 0.5) ** Jr[i]
        gr_pipi = gr_pipi + nr[i] * Ir[i] * (Ir[i] - 1) * pressure ** (Ir[i] - 2) * (tau - 0.5) ** Jr[i]
        gr_pitau = gr_pitau + nr[i] * Ir[i] * pressure ** (Ir[i] - 1) * Jr[i] * (tau - 0.5) ** (Jr[i] - 1)
        gr_tautau = gr_tautau + nr[i] * pressure ** Ir[i] * Jr[i] * (Jr[i] - 1) * (tau - 0.5) ** (Jr[i] - 2)
    
    return (1000 * R * temperature * (1 + 2 * pressure * gr_pi + pressure ** 2 * gr_pi ** 2) / ((1 - pressure ** 2 * gr_pipi) + (1 + pressure * gr_pi - tau * pressure * gr_pitau) ** 2 / (tau ^ 2 * (g0_tautau + gr_tautau)))) ** 0.5

def T2_ph(pressure, enthalpy):
    if pressure < 4:
        sub_reg = 1
    else:
        if pressure < (905.84278514723 - 0.67955786399241 * enthalpy + 0.00012809002730136 * enthalpy ** 2):
            sub_reg = 2
        else:
            sub_reg = 3

    if sub_reg == 1:
        Ji = [0, 1, 2, 3, 7, 20, 0, 1, 2, 3, 7, 9, 11, 18, 44, 0, 2, 7, 36, 38, 40, 42, 44, 24, 44, 12, 32, 44, 32,
              36, 42, 34, 44, 28]
        Ii = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7]
        ni = [1089.8952318288, 849.51654495535, -107.81748091826, 33.153654801263, -7.4232016790248,
              11.765048724356,
              1.844574935579, -4.1792700549624, 6.2478196935812, -17.344563108114, -200.58176862096,
              271.96065473796,
              -455.11318285818, 3091.9688604755, 252266.40357872, -0.0061707422868339, -0.31078046629583,
              11.670873077107,
              128127984.04046, -985549096.23276, 2822454697.3002, -3594897141.0703, 1722734991.3197,
              -13551.334240775,
              12848734.66465, 1.3865724283226, 235988.32556514, -13105236.545054, 7399.9835474766, -551966.9703006,
              3715408.5996233, 19127.72923966, -415351.64835634, -62.459855192507]

        Ts = 0
        hs = enthalpy / 2000

        for i in range(0, 33):
            Ts += ni[i] * pressure ** (Ii[i]) * (hs - 2.1) ** Ji[i]

        return Ts

    elif sub_reg == 2:

        Ji = [0, 1, 2, 12, 18, 24, 28, 40, 0, 2, 6, 12, 18, 24, 28, 40, 2, 8, 18, 40, 1, 2, 12, 24, 2, 12, 18, 24, 28,
              40,
              18, 24, 40, 28, 2, 28, 1, 40]
        Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 6, 7,
              7,
              9, 9]
        ni = [1489.5041079516, 743.07798314034, -97.708318797837, 2.4742464705674, -0.63281320016026, 1.1385952129658,
              -0.47811863648625, 0.0085208123431544, 0.93747147377932, 3.3593118604916, 3.3809355601454,
              0.16844539671904,
              0.73875745236695, -0.47128737436186, 0.15020273139707, -0.002176411421975, -0.021810755324761,
              -0.10829784403677, -0.046333324635812, 7.1280351959551E-05, 0.00011032831789999, 0.00018955248387902,
              0.0030891541160537, 0.0013555504554949, 2.8640237477456E-07, -1.0779857357512E-05, -7.6462712454814E-05,
              1.4052392818316E-05, -3.1083814331434E-05, -1.0302738212103E-06, 2.821728163504E-07, 1.2704902271945E-06,
              7.3803353468292E-08, -1.1030139238909E-08, -8.1456365207833E-14, -2.5180545682962E-11,
              -1.7565233969407E-18,
              8.6934156344163E-15]
        Ts = 0
        hs = enthalpy / 2000

        for i in range(0, 37):
            Ts += ni[i] * (pressure - 2) ** (Ii[i]) * (hs - 2.6) ** Ji[i]

        return Ts

    else:

        Ji = [0, 4, 0, 2, 0, 2, 0, 1, 0, 2, 0, 1, 4, 8, 4, 0, 1, 4, 10, 12, 16, 20, 22]
        Ii = [-7, -7, -6, -6, -5, -5, -2, -2, -1, -1, 0, 0, 1, 1, 2, 6, 6, 6, 6, 6, 6, 6, 6]
        ni = [-3236839855524.2, 7326335090218.1, 358250899454.47, -583401318515.9, -10783068217.47, 20825544563.171,
              610747.83564516, 859777.2253558, -25745.72360417, 31081.088422714, 1208.2315865936, 482.19755109255,
              3.7966001272486, -10.842984880077, -0.04536417267666, 1.4559115658698E-13, 1.126159740723E-12,
              -1.7804982240686E-11, 1.2324579690832E-07, -1.1606921130984E-06, 2.7846367088554E-05,
              -0.00059270038474176,
              0.0012918582991878]

        Ts = 0
        hs = enthalpy / 2000

        for i in range(0, 22):
            Ts += ni[i] * (pressure + 25) ** (Ii[i]) * (hs - 1.8) ** Ji[i]

        return Ts

def T2_ps(pressure, entropy):

    if pressure < 4:
        sub_reg = 1
    else:
        if entropy < 5.85:
            sub_reg = 3
        else:
            sub_reg = 2

    if sub_reg == 1:
        Ii = [-1.5, -1.5, -1.5, -1.5, -1.5, -1.5, -1.25, -1.25, -1.25, -1, -1, -1, -1, -1, -1, -0.75, -0.75, -0.5,
              -0.5, -0.5, -0.5, -0.25, -0.25, -0.25, -0.25, 0.25, 0.25, 0.25, 0.25, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5,
              0.5, 0.75, 0.75, 0.75, 0.75, 1, 1, 1.25, 1.25, 1.5, 1.5]
        Ji = [-24, -23, -19, -13, -11, -10, -19, -15, -6, -26, -21, -17, -16, -9, -8, -15, -14, -26, -13, -9, -7, -27,
              -25, -11, -6, 1, 4, 8, 11, 0, 1, 5, 6, 10, 14, 16, 0, 4, 9, 17, 7, 18, 3, 15, 5, 18]
        ni = [-392359.83861984, 515265.7382727, 40482.443161048, -321.93790923902, 96.961424218694, -22.867846371773,
              -449429.14124357, -5011.8336020166, 0.35684463560015, 44235.33584819, -13673.388811708, 421632.60207864,
              22516.925837475, 474.42144865646, -149.31130797647, -197811.26320452, -23554.39947076, -19070.616302076,
              55375.669883164, 3829.3691437363, -603.91860580567, 1936.3102620331, 4266.064369861, -5978.0638872718,
              -704.01463926862, 338.36784107553, 20.862786635187, 0.033834172656196, -4.3124428414893E-05,
              166.53791356412, -139.86292055898, -0.78849547999872, 0.072132411753872, -0.0059754839398283,
              -1.2141358953904E-05, 2.3227096733871E-07, -10.538463566194, 2.0718925496502, -0.072193155260427,
              2.074988708112E-07, -0.018340657911379, 2.9036272348696E-07, 0.21037527893619, 0.00025681239729999,
              -0.012799002933781, -8.2198102652018E-06]

        sigma = entropy / 2
        teta = 0

        for i in range(0, 45):
            teta += ni[i] * pressure ** Ii[i] * (sigma - 2) ** Ji[i]

        return teta

    elif sub_reg == 2:
        Ii = [-6, -6, -5, -5, -4, -4, -4, -3, -3, -3, -3, -2, -2, -2, -2, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0,
              1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5]
        Ji = [0, 11, 0, 11, 0, 1, 11, 0, 1, 11, 12, 0, 1, 6, 10, 0, 1, 5, 8, 9, 0, 1, 2, 4, 5, 6, 9, 0, 1, 2, 3, 7, 8,
              0, 1, 5, 0, 1, 3, 0, 1, 0, 1, 2]
        ni = [316876.65083497, 20.864175881858, -398593.99803599, -21.816058518877, 223697.85194242, -2784.1703445817,
              9.920743607148, -75197.512299157, 2970.8605951158, -3.4406878548526, 0.38815564249115, 17511.29508575,
              -1423.7112854449, 1.0943803364167, 0.89971619308495, -3375.9740098958, 471.62885818355, -1.9188241993679,
              0.41078580492196, -0.33465378172097, 1387.0034777505, -406.63326195838, 41.72734715961, 2.1932549434532,
              -1.0320050009077, 0.35882943516703, 0.0052511453726066, 12.838916450705, -2.8642437219381,
              0.56912683664855, -0.099962954584931, -0.0032632037778459, 0.00023320922576723, -0.1533480985745,
              0.029072288239902, 0.00037534702741167, 0.0017296691702411, -0.00038556050844504, -3.5017712292608E-05,
              -1.4566393631492E-05, 5.6420857267269E-06, 4.1286150074605E-08, -2.0684671118824E-08,
              1.6409393674725E-09]

        sigma = entropy / 0.7853
        teta = 0

        for i in range(0, 43):
            teta += ni[i] * pressure ** Ii[i] * (10 - sigma) ** Ji[i]

        return teta

    else:
        Ii = [-2, -2, -1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 7, 7]
        Ji = [0, 1, 0, 0, 1, 2, 3, 0, 1, 3, 4, 0, 1, 2, 0, 1, 5, 0, 1, 4, 0, 1, 2, 0, 1, 0, 1, 3, 4, 5]
        ni = [909.68501005365, 2404.566708842, -591.6232638713, 541.45404128074, -270.98308411192, 979.76525097926,
              -469.66772959435, 14.399274604723, -19.104204230429, 5.3299167111971, -21.252975375934, -0.3114733441376,
              0.60334840894623, -0.042764839702509, 0.0058185597255259, -0.014597008284753, 0.0056631175631027,
              -7.6155864584577E-05, 0.00022440342919332, -1.2561095013413E-05, 6.3323132660934E-07,
              -2.0541989675375E-06, 3.6405370390082E-08, -2.9759897789215E-09, 1.0136618529763E-08,
              5.9925719692351E-12, -2.0677870105164E-11, -2.0874278181886E-11, 1.0162166825089E-10,
              -1.6429828281347E-10]

        sigma = entropy / 2.9251
        teta = 0

        for i in range(0, 29):
            teta += ni[i] * pressure ** Ii[i] * (2 - sigma) ** Ji[i]

        return teta

def p2_hs(enthalpy, entropy):

    if enthalpy < (-3498.98083432139 + 2575.60716905876 * entropy - 421.073558227969 * entropy ** 2 + 27.6349063799944 * entropy ** 3):
        sub_reg = 1
    elif entropy < 5.85:
        sub_reg = 3
    else:
        sub_reg = 2

    if sub_reg == 1:
        Ii = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 6, 7]
        Ji = [1, 3, 6, 16, 20, 22, 0, 1, 2, 3, 5, 6, 10, 16, 20, 22, 3, 16, 20, 0, 2, 3, 6, 16, 16, 3, 16, 3, 1]
        ni = [-0.0182575361923032, -0.125229548799536, 0.592290437320145, 6.04769706185122, 238.624965444474,
                   -298.639090222922, 0.051225081304075, -0.437266515606486, 0.413336902999504, -5.16468254574773,
                   -5.57014838445711, 12.8555037824478, 11.414410895329, -119.504225652714, -2847.7798596156,
                   4317.57846408006,
                   1.1289404080265, 1974.09186206319, 1516.12444706087, 0.0141324451421235, 0.585501282219601,
                   -2.97258075863012, 5.94567314847319, -6236.56565798905, 9659.86235133332, 6.81500934948134,
                   -6332.07286824489, -5.5891922446576, 0.0400645798472063]

        eta = enthalpy / 4200
        sigma = entropy / 12
        pressure = 0

        for i in range(0, 28):
            pressure += ni[i] * (eta - 0.5) ** Ii[i] * (sigma - 1.2) ** Ji[i]

        return pressure ** 4 * 4

    elif sub_reg == 2:

        Ii = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 6, 6, 6, 7, 7, 8, 8, 8, 8, 12, 14]
        Ji = [0, 1, 2, 4, 8, 0, 1, 2, 3, 5, 12, 1, 6, 18, 0, 1, 7, 12, 1, 16, 1, 12, 1, 8, 18, 1, 16, 1, 3, 14, 18, 10, 16]
        ni = [0.0801496989929495, -0.543862807146111, 0.337455597421283, 8.9055545115745, 313.840736431485,
                   0.797367065977789, -1.2161697355624, 8.72803386937477, -16.9769781757602, -186.552827328416,
                   95115.9274344237, -18.9168510120494, -4334.0703719484, 543212633.012715, 0.144793408386013, 128.024559637516,
                   -67230.9534071268, 33697238.0095287, -586.63419676272, -22140322476.9889, 1716.06668708389,
                   -570817595.806302, -3121.09693178482, -2078413.8463301, 3056059461577.86, 3221.57004314333, 326810259797.295,
                   -1441.04158934487, 410.694867802691, 109077066873.024, -24796465425889.3, 1888019068.65134, -123651009018773]
        eta = enthalpy / 4100
        sigma = entropy / 7.9

        for i in range(0,32):
            pressure += ni[i] * (eta - 0.6) ** Ii[i] * (sigma - 1.01) ** Ji[i]

        return pressure ** 4 * 100

    else:
        Ii = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 10, 12, 16]
        Ji = [0, 1, 2, 3, 4, 8, 0, 2, 5, 8, 14, 2, 3, 7, 10, 18, 0, 5, 8, 16, 18, 18, 1, 4, 6, 14, 8, 18, 7, 7, 10]
        ni = [0.112225607199012, -3.39005953606712, -32.0503911730094, -197.5973051049, -407.693861553446,
                   13294.3775222331, 1.70846839774007, 37.3694198142245, 3581.44365815434, 423014.446424664, -751071025.760063,
                   52.3446127607898, -228.351290812417, -960652.417056937, -80705929.2526074, 1626980172256.69,
                   0.772465073604171, 46392.9973837746, -13731788.5134128, 1704703926305.12, -25110462818730.8, 31774883083552
         , 53.8685623675312, -55308.9094625169, -1028615.22421405, 2042494187562.34, 273918446.626977, -2.63963146312685E+15, -1078908541.08088, -29649262098.0124, -1.11754907323424E+15]
        eta = enthalpy / 3500
        sigma = entropy / 5.9

        for i in range(0, 30):
            pressure += ni[i] * (eta - 0.7) ** Ii[i] * (sigma - 1.1) ** Ji[i]

        return pressure ** 4 * 100

def T2_prho(pressure, rho):

    if pressure < 16.5292:
        low_bound = T4_p(pressure)
    else:
        low_bound = B23T_p(pressure)

    high_bound = 1073.15

    while abs(rho - rhos) > 10 ** (-6):
        Ts = (low_bound + high_bound) / 2
        rhos = 1 / v2_pT(pressure, Ts)

        if rhos < rho:
            high_bound = Ts
        else:
            low_bound = Ts

    return Ts 


# REGION 3
def p3_rhoT(rho, temperature):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10, 11]
    Ji = [0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26, 2, 26, 0, 1, 26]
    ni = [1.0658070028513, -15.732845290239, 20.944396974307, -7.6867707878716, 2.6185947787954, -2.808078114862, 1.2053369696517, -0.0084566812812502, -1.2654315477714, -1.1524407806681, 0.88521043984318, -0.64207765181607, 0.38493460186671, -0.85214708824206, 4.8972281541877, -3.0502617256965, 0.039420536879154, 0.12558408424308, -0.2799932969871, 1.389979956946, -2.018991502357, -0.0082147637173963, -0.47596035734923, 0.0439840744735, -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158, -0.022175400873096, 0.094260751665092, 0.16436278447961, -0.013503372241348, -0.014834345352472, 0.00057922953628084, 0.0032308904703711, 8.0964802996215E-05, -0.00016557679795037, -4.4923899061815E-05]
    
    delta = rho / rhoc
    tau = tc / temperature
    fidelta = 0

    for i in range(1, 39):
        fidelta = fidelta + ni[i] * Ii[i] * delta ** (Ii[i] - 1) * tau ** Ji[i]

    fidelta = fidelta + ni[0] / delta

    return rho * R * temperature * delta * fidelta / 1000

def u3_rhoT(rho, temperature):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhox = 322

    Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10, 11]
    Ji = [0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26, 2, 26, 0, 1, 26]
    ni = [1.0658070028513, -15.732845290239, 20.944396974307, -7.6867707878716, 2.6185947787954, -2.808078114862, 1.2053369696517, -0.0084566812812502, -1.2654315477714, -1.1524407806681, 0.88521043984318, -0.64207765181607, 0.38493460186671, -0.85214708824206, 4.8972281541877, -3.0502617256965, 0.039420536879154, 0.12558408424308, -0.2799932969871, 1.389979956946, -2.018991502357, -0.0082147637173963, -0.47596035734923, 0.0439840744735, -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158, -0.022175400873096, 0.094260751665092, 0.16436278447961, -0.013503372241348, -0.014834345352472, 0.00057922953628084, 0.0032308904703711, 8.0964802996215E-05, -0.00016557679795037, -4.4923899061815E-05]
    
    delta = rho / rhox
    tau = tc / temperature
    fitau = 0

    for i in range(1,39):
       fitau + ni[i] * delta ** Ii[i] * Ji[i] * tau ** (Ji[i] - 1)

    return R * temperature * (tau * fitau)

def h3_rhoT(rho, temperature):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10, 11]
    Ji = [0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26, 2, 26, 0, 1, 26]
    ni = [1.0658070028513, -15.732845290239, 20.944396974307, -7.6867707878716, 2.6185947787954, -2.808078114862, 1.2053369696517, -0.0084566812812502, -1.2654315477714, -1.1524407806681, 0.88521043984318, -0.64207765181607, 0.38493460186671, -0.85214708824206, 4.8972281541877, -3.0502617256965, 0.039420536879154, 0.12558408424308, -0.2799932969871, 1.389979956946, -2.018991502357, -0.0082147637173963, -0.47596035734923, 0.0439840744735, -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158, -0.022175400873096, 0.094260751665092, 0.16436278447961, -0.013503372241348, -0.014834345352472, 0.00057922953628084, 0.0032308904703711, 8.0964802996215E-05, -0.00016557679795037, -4.4923899061815E-05]
    delta = rho / rhoc
    tau = tc / temperature
    fidelta = 0
    fitau = 0

    for i in range(1, 39):
        fidelta = fidelta + ni[i] * Ii[i] * delta ** (Ii[i] - 1) * tau ** Ji[i]
        fitau = fitau + ni[i] * delta ** Ii[i] * Ji[i] * tau ** (Ji[i] - 1)
    
    fidelta = fidelta + ni[0] / delta
    
    return R * temperature * (tau * fitau + delta * fidelta)

def s3_rhoT(rho, temperature):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10, 11]
    Ji = [0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26, 2, 26, 0, 1, 26]
    ni = [1.0658070028513, -15.732845290239, 20.944396974307, -7.6867707878716, 2.6185947787954, -2.808078114862, 1.2053369696517, -0.0084566812812502, -1.2654315477714, -1.1524407806681, 0.88521043984318, -0.64207765181607, 0.38493460186671, -0.85214708824206, 4.8972281541877, -3.0502617256965, 0.039420536879154, 0.12558408424308, -0.2799932969871, 1.389979956946, -2.018991502357, -0.0082147637173963, -0.47596035734923, 0.0439840744735, -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158, -0.022175400873096, 0.094260751665092, 0.16436278447961, -0.013503372241348, -0.014834345352472, 0.00057922953628084, 0.0032308904703711, 8.0964802996215E-05, -0.00016557679795037, -4.4923899061815E-05]
    delta = rho / rhoc
    tau = tc / temperature
    fi = 0
    fitau = 0

    for i in range(1,39):
        fi = fi + ni[i] * delta ** Ii[i] * tau ** Ji[i]
        fitau = fitau + ni[i] * delta ** Ii[i] * Ji[i] * tau ** (Ji[i] - 1)

    fi = fi + ni[0] * math.log(delta, 10)
    return R * (tau * fitau - fi)

def Cp3_rhoT(rho, temperature):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322
    Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10, 11]
    Ji = [0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26, 2, 26, 0, 1, 26]
    ni = [1.0658070028513, -15.732845290239, 20.944396974307, -7.6867707878716, 2.6185947787954, -2.808078114862, 1.2053369696517, -0.0084566812812502, -1.2654315477714, -1.1524407806681, 0.88521043984318, -0.64207765181607, 0.38493460186671, -0.85214708824206, 4.8972281541877, -3.0502617256965, 0.039420536879154, 0.12558408424308, -0.2799932969871, 1.389979956946, -2.018991502357, -0.0082147637173963, -0.47596035734923, 0.0439840744735, -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158, -0.022175400873096, 0.094260751665092, 0.16436278447961, -0.013503372241348, -0.014834345352472, 0.00057922953628084, 0.0032308904703711, 8.0964802996215E-05, -0.00016557679795037, -4.4923899061815E-05]
    delta = rho / rhoc
    tau = tc / temperature
    fitautau = 0
    fidelta = 0
    fideltatau = 0
    fideltadelta = 0

    for i in range(1,39):
        fitautau = fitautau + ni[i] * delta ** Ii[i] * Ji[i] * (Ji[i] - 1) * tau ** (Ji[i] - 2)
        fidelta = fidelta + ni[i] * Ii[i] * delta ** (Ii[i] - 1) * tau ** Ji[i]
        fideltatau = fideltatau + ni[i] * Ii[i] * delta ** (Ii[i] - 1) * Ji[i] * tau ** (Ji[i] - 1)
        fideltadelta = fideltadelta + ni[i] * Ii[i] * (Ii[i] - 1) * delta ** (Ii[i] - 2) * tau ** Ji[i]
    
    fidelta = fidelta + ni[0] / delta
    fideltadelta = fideltadelta - ni[0] / (delta ** 2)
    return R * (-(tau ** 2 * fitautau) + (delta * fidelta - delta * tau * fideltatau) ** 2 / (2 * delta * fidelta + delta ** 2 * fideltadelta))

def Cv3_rhoT(rho, temperature):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10, 11]
    Ji = [0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26, 2, 26, 0, 1, 26]
    ni = [1.0658070028513, -15.732845290239, 20.944396974307, -7.6867707878716, 2.6185947787954, -2.808078114862, 1.2053369696517, -0.0084566812812502, -1.2654315477714, -1.1524407806681, 0.88521043984318, -0.64207765181607, 0.38493460186671, -0.85214708824206, 4.8972281541877, -3.0502617256965, 0.039420536879154, 0.12558408424308, -0.2799932969871, 1.389979956946, -2.018991502357, -0.0082147637173963, -0.47596035734923, 0.0439840744735, -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158, -0.022175400873096, 0.094260751665092, 0.16436278447961, -0.013503372241348, -0.014834345352472, 0.00057922953628084, 0.0032308904703711, 8.0964802996215E-05, -0.00016557679795037, -4.4923899061815E-05]
    delta = rho / rhoc
    tau = tc / temperature
    fitautau = 0

    for i in range(1, 39):
        fitautau = fitautau + ni[i] * delta ** Ii[i] * Ji[i] * (Ji[i] - 1) * tau ** (Ji[i] - 2)

    return R * -(tau * tau * fitautau)

def w3_rhoT(rho, temperature):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    Ii = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 8, 9, 9, 10, 10, 11]
    Ji = [0, 0, 1, 2, 7, 10, 12, 23, 2, 6, 15, 17, 0, 2, 6, 7, 22, 26, 0, 2, 4, 16, 26, 0, 2, 4, 26, 1, 3, 26, 0, 2, 26, 2, 26, 2, 26, 0, 1, 26]
    ni = [1.0658070028513, -15.732845290239, 20.944396974307, -7.6867707878716, 2.6185947787954, -2.808078114862, 1.2053369696517, -0.0084566812812502, -1.2654315477714, -1.1524407806681, 0.88521043984318, -0.64207765181607, 0.38493460186671, -0.85214708824206, 4.8972281541877, -3.0502617256965, 0.039420536879154, 0.12558408424308, -0.2799932969871, 1.389979956946, -2.018991502357, -0.0082147637173963, -0.47596035734923, 0.0439840744735, -0.44476435428739, 0.90572070719733, 0.70522450087967, 0.10770512626332, -0.32913623258954, -0.50871062041158, -0.022175400873096, 0.094260751665092, 0.16436278447961, -0.013503372241348, -0.014834345352472, 0.00057922953628084, 0.0032308904703711, 8.0964802996215E-05, -0.00016557679795037, -4.4923899061815E-05]
    delta = rho / rhoc
    tau = tc / temperature
    fitautau = 0
    fidelta = 0
    fideltatau = 0
    fideltadelta = 0

    for i in range(1,39):
        fitautau = fitautau + ni[i] * delta ** Ii[i] * Ji[i] * (Ji[i] - 1) * tau ** (Ji[i] - 2)
        fidelta = fidelta + ni[i] * Ii[i] * delta ** (Ii[i] - 1) * tau ** Ji[i]
        fideltatau = fideltatau + ni[i] * Ii[i] * delta ** (Ii[i] - 1) * Ji[i] * tau ** (Ji[i] - 1)
        fideltadelta = fideltadelta + ni[i] * Ii[i] * (Ii[i] - 1) * delta ** (Ii[i] - 2) * tau ** Ji[i]

    fidelta = fidelta + ni[0] / delta
    fideltadelta = fideltadelta - ni[0] / (delta ** 2)
    return (1000 * R * temperature * (2 * delta * fidelta + delta ** 2 * fideltadelta - (delta * fidelta - delta * tau * fideltatau) ** 2 / (tau ** 2 * fitautau))) ** 0.5

def T3_ph(pressure, enthalpy):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    h3ab = 2014.64004206875 + 3.74696550136983 * pressure - 0.0219921901054187 * pressure ** 2 + 8.7513168600995E-05 * pressure ** 3

    if enthalpy < h3ab:
        Ii = [-12, -12, -12, -12, -12, -12, -12, -12, -10, -10, -10, -8, -8, -8, -8, -5, -3, -2, -2, -2, -1, -1, 0,
              0, 1, 3, 3, 4, 4, 10, 12]
        Ji = [0, 1, 2, 6, 14, 16, 20, 22, 1, 5, 12, 0, 2, 4, 10, 2, 0, 1, 3, 4, 0, 2, 0, 1, 1, 0, 1, 0, 3, 4, 5]
        ni = [-1.33645667811215E-07, 4.55912656802978E-06, -1.46294640700979E-05, 0.0063934131297008,
              372.783927268847, -7186.54377460447, 573494.7521034, -2675693.29111439, -3.34066283302614E-05,
              -0.0245479214069597, 47.8087847764996, 7.64664131818904E-06, 0.00128350627676972, 0.0171219081377331,
              -8.51007304583213, -0.0136513461629781, -3.84460997596657E-06, 0.00337423807911655,
              -0.551624873066791, 0.72920227710747, -0.00992522757376041, -0.119308831407288, 0.793929190615421,
              0.454270731799386, 0.20999859125991, -0.00642109823904738, -0.023515586860454, 0.00252233108341612,
              -0.00764885133368119, 0.0136176427574291, -0.0133027883575669]
        ps = pressure / 100
        hs = enthalpy / 2300
        Ts = 0

        for i in range(0, 30):
            Ts += ni[i] * (ps + 0.24) ** Ii[i] * (hs - 0.615) ** Ji[i]

        return Ts * 760

    else:
        Ii = [-12, -12, -10, -10, -10, -10, -10, -8, -8, -8, -8, -8, -6, -6, -6, -4, -4, -3, -2, -2, -1, -1, -1,
              -1, -1, -1, 0, 0, 1, 3, 5, 6, 8]
        Ji = [0, 1, 0, 1, 5, 10, 12, 0, 1, 2, 4, 10, 0, 1, 2, 0, 1, 5, 0, 4, 2, 4, 6, 10, 14, 16, 0, 2, 1, 1, 1, 1,
              1]
        ni = [3.2325457364492E-05, -0.000127575556587181, -0.000475851877356068, 0.00156183014181602,
              0.105724860113781, -85.8514221132534, 724.140095480911, 0.00296475810273257, -0.00592721983365988,
              -0.0126305422818666, -0.115716196364853, 84.9000969739595, -0.0108602260086615, 0.0154304475328851,
              0.0750455441524466, 0.0252520973612982, -0.0602507901232996, -3.07622221350501, -0.0574011959864879,
              5.03471360939849, -0.925081888584834, 3.91733882917546, -77.314600713019, 9493.08762098587,
              -1410437.19679409, 8491662.30819026, 0.861095729446704, 0.32334644281172, 0.873281936020439,
              -0.436653048526683, 0.286596714529479, -0.131778331276228, 0.00676682064330275]
        hs = enthalpy / 2800
        ps = pressure / 100
        Ts = 0

        for i in range(0, 32):
            Ts += ni[i] * (ps + 0.298) ** Ii[i] * (hs - 0.72) ** Ji[i]

        return Ts * 860

def v3_ph(pressure, enthalpy):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322
    h3ab = (2014.64004206875 + 3.74696550136983 * pressure - 0.0219921901054187 * pressure ** 2 + 8.7513168600995E-05 * pressure ** 3)

    if enthalpy < h3ab:
        Ii = [-12, -12, -12, -12, -10, -10, -10, -8, -8, -6, -6, -6, -4, -4, -3, -2, -2, -1, -1, -1, -1, 0, 0, 1, 1, 1, 2, 2, 3, 4, 5, 8]
        Ji = [6, 8, 12, 18, 4, 7, 10, 5, 12, 3, 4, 22, 2, 3, 7, 3, 16, 0, 1, 2, 3, 0, 1, 0, 1, 2, 0, 2, 0, 2, 2, 2]
        ni = [0.00529944062966028, -0.170099690234461, 11.1323814312927, -2178.98123145125, -0.000506061827980875, 0.556495239685324, -9.43672726094016, -0.297856807561527, 93.9353943717186, 0.0192944939465981, 0.421740664704763, -3689141.2628233, -0.00737566847600639, -0.354753242424366, -1.99768169338727, 1.15456297059049, 5683.6687581596, 0.00808169540124668, 0.172416341519307, 1.04270175292927, -0.297691372792847, 0.560394465163593, 0.275234661176914, -0.148347894866012, -0.0651142513478515, -2.92468715386302, 0.0664876096952665, 3.52335014263844, -0.0146340792313332, -2.24503486668184, 1.10533464706142, -0.0408757344495612]
        ps = pressure / 100
        hs = enthalpy / 2100
        vs = 0

        for i in range(0, 31):
            vs = vs + ni[i] * (ps + 0.128) ** Ii[i] * (hs - 0.727) ** Ji(i)

        return vs * 0.0028
    else:
        Ii = [-12, -12, -8, -8, -8, -8, -8, -8, -6, -6, -6, -6, -6, -6, -4, -4, -4, -3, -3, -2, -2, -1, -1, -1, -1, 0, 1, 1, 2, 2]
        Ji = [0, 1, 0, 1, 3, 6, 7, 8, 0, 1, 2, 5, 6, 10, 3, 6, 10, 0, 2, 1, 2, 0, 1, 4, 5, 0, 0, 1, 2, 6]
        ni = [-2.25196934336318E-09, 1.40674363313486E-08, 2.3378408528056E-06, -3.31833715229001E-05, 0.00107956778514318, -0.271382067378863, 1.07202262490333, -0.853821329075382, -2.15214194340526E-05, 0.00076965608822273, -0.00431136580433864, 0.453342167309331, -0.507749535873652, -100.475154528389, -0.219201924648793, -3.21087965668917, 607.567815637771, 0.000557686450685932, 0.18749904002955, 0.00905368030448107, 0.285417173048685, 0.0329924030996098, 0.239897419685483, 4.82754995951394, -11.8035753702231, 0.169490044091791, -0.0179967222507787, 0.0371810116332674, -0.0536288335065096, 1.6069710109252]
        ps = pressure / 100
        hs = enthalpy / 2800
        vs = 0

        for i in range(0, 29):
            vs = vs + ni[i] * (ps + 0.0661) ** Ii[i] * (hs - 0.72) ** Ji[i]
        
        return vs * 0.0088

def T3_ps(pressure, entropy):

    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    if entropy <= 4.41202148223476:
        Ii = [-12, -12, -10, -10, -10, -10, -8, -8, -8, -8, -6, -6, -6, -5, -5, -5, -4, -4, -4, -2, -2, -1, -1, 0,
              0, 0, 1, 2, 2, 3, 8, 8, 10]
        Ji = [28, 32, 4, 10, 12, 14, 5, 7, 8, 28, 2, 6, 32, 0, 14, 32, 6, 10, 36, 1, 4, 1, 6, 0, 1, 4, 0, 0, 3, 2,
              0, 1, 2]
        ni = [1500420082.63875, -159397258480.424, 0.000502181140217975, -67.2057767855466, 1450.58545404456,
              -8238.8953488889, -0.154852214233853, 11.2305046746695, -29.7000213482822, 43856513263.5495,
              0.00137837838635464, -2.97478527157462, 9717779473494.13, -5.71527767052398E-05, 28830.794977842,
              -74442828926270.3, 12.8017324848921, -368.275545889071, 6.64768904779177E+15, 0.044935925195888,
              -4.22897836099655, -0.240614376434179, -4.74341365254924, 0.72409399912611, 0.923874349695897,
              3.99043655281015, 0.0384066651868009, -0.00359344365571848, -0.735196448821653, 0.188367048396131,
              0.000141064266818704, -0.00257418501496337, 0.00123220024851555]

        sigma = entropy / 4.4
        ps = pressure / 100
        teta = 0

        for i in range(0, 32):
            teta += ni[i] * (ps + 0.24) ** Ii[i] * (sigma - 0.703) ** Ji[i]

        return teta * 760

    else:
        Ii = [-12, -12, -12, -12, -8, -8, -8, -6, -6, -6, -5, -5, -5, -5, -5, -4, -3, -3, -2, 0, 2, 3, 4, 5, 6, 8,
              12, 14]
        Ji = [1, 3, 4, 7, 0, 1, 3, 0, 2, 4, 0, 1, 2, 4, 6, 12, 1, 6, 2, 0, 1, 1, 0, 24, 0, 3, 1, 2]
        ni = [0.52711170160166, -40.1317830052742, 153.020073134484, -2247.99398218827, -0.193993484669048,
              -1.40467557893768, 42.6799878114024, 0.752810643416743, 22.6657238616417, -622.873556909932,
              -0.660823667935396, 0.841267087271658, -25.3717501764397, 485.708963532948, 880.531517490555,
              2650155.92794626, -0.359287150025783, -656.991567673753, 2.41768149185367, 0.856873461222588,
              0.655143675313458, -0.213535213206406, 0.00562974957606348, -316955725450471, -0.000699997000152457,
              0.0119845803210767, 1.93848122022095E-05, -2.15095749182309E-05]

        sigma = entropy / 5.3
        ps = pressure / 100
        teta = 0

        for i in range(0, 27):
            teta += ni[i] * (ps + 0.76) ** Ii[i] * (sigma - 0.818) ** Ji[i]

        return teta * 860

def v3_ps(pressure, entropy):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    if entropy <= 4.41202148223476:
        Ii = [-12, -12, -12, -10, -10, -10, -10, -8, -8, -8, -8, -6, -5, -4, -3, -3, -2, -2, -1, -1, 0, 0, 0, 1, 2, 4, 5, 6]
        Ji = [10, 12, 14, 4, 8, 10, 20, 5, 6, 14, 16, 28, 1, 5, 2, 4, 3, 8, 1, 2, 0, 1, 3, 0, 0, 2, 2, 0]
        ni = [79.5544074093975, -2382.6124298459, 17681.3100617787, -0.00110524727080379, -15.3213833655326, 297.544599376982, -35031520.6871242, 0.277513761062119, -0.523964271036888, -148011.182995403, 1600148.99374266, 1708023226634.27, 0.000246866996006494, 1.6532608479798, -0.118008384666987, 2.537986423559, 0.965127704669424, -28.2172420532826, 0.203224612353823, 1.10648186063513, 0.52612794845128, 0.277000018736321, 1.08153340501132, -0.0744127885357893, 0.0164094443541384, -0.0680468275301065, 0.025798857610164, -0.000145749861944416]
        ps = pressure / 100
        sigma = entropy / 4.4
        omega = 0

        for i in range(0, 27):
            omega = omega + ni[i] * (ps + 0.187) ** Ii[i] * (sigma - 0.755) ** Ji[i]

        return omega * 0.0028
    
    else:
        Ii = [-12, -12, -12, -12, -12, -12, -10, -10, -10, -10, -8, -5, -5, -5, -4, -4, -4, -4, -3, -2, -2, -2, -2, -2, -2, 0, 0, 0, 1, 1, 2]
        Ji = [0, 1, 2, 3, 5, 6, 0, 1, 2, 4, 0, 1, 2, 3, 0, 1, 2, 3, 1, 0, 1, 2, 3, 4, 12, 0, 1, 2, 0, 2, 2]
        ni = [5.91599780322238E-05, -0.00185465997137856, 0.0104190510480013, 0.0059864730203859, -0.771391189901699, 1.72549765557036, -0.000467076079846526, 0.0134533823384439, -0.0808094336805495, 0.508139374365767, 0.00128584643361683, -1.63899353915435, 5.86938199318063, -2.92466667918613, -0.00614076301499537, 5.76199014049172, -12.1613320606788, 1.67637540957944, -7.44135838773463, 0.0378168091437659, 4.01432203027688, 16.0279837479185, 3.17848779347728, -3.58362310304853, -1159952.60446827, 0.199256573577909, -0.122270624794624, -19.1449143716586, -0.0150448002905284, 14.6407900162154, -3.2747778718823]
        ps = pressure / 100
        sigma = entropy / 5.3
        omega = 0

        for i in range(0, 30):
            omega = omega + ni[i] * (ps + 0.298) ** Ii[i] * (sigma - 0.816) ** Ji[i]

        return omega * 0.0088

def p3_hs(enthalpy, entropy):
    R = 0.461526
    tc = 647.096
    pc = 22.064
    rhoc = 322

    if entropy < 4.41202148223476:

        Ii = [0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8, 10, 10, 14, 18, 20, 22, 22, 24, 28, 28, 32, 32]
        Ji = [0, 1, 5, 0, 3, 4, 8, 14, 6, 16, 0, 2, 3, 0, 1, 4, 5, 28, 28, 24, 1, 32, 36, 22, 28, 36, 16, 28, 36, 16, 36, 10, 28]
        ni = [7.70889828326934, -26.0835009128688, 267.416218930389, 17.2221089496844, -293.54233214597, 614.135601882478, -61056.2757725674, -65127225.1118219, 73591.9313521937, -11664650591.4191, 35.5267086434461, -596.144543825955, -475.842430145708, 69.6781965359503, 335.674250377312, 25052.6809130882, 146997.380630766, 5.38069315091534E+19, 1.43619827291346E+21, 3.64985866165994E+19, -2547.41561156775, 2.40120197096563E+27, -3.93847464679496E+29, 1.47073407024852E+24, -4.26391250432059E+31, 1.94509340621077E+38, 6.66212132114896E+23, 7.06777016552858E+33, 1.75563621975576E+41, 1.08408607429124E+28, 7.30872705175151E+43, 1.5914584739887E+24, 3.77121605943324E+40]
        sigma = entropy / 4.4
        eta = enthalpy / 2300
        pressure = 0
        for i in range(0,32):
          pressure += ni[i] * (eta - 1.01) ** Ii[i] * (sigma - 0.75) ** Ji[i]

        return pressure * 99

    else:
        Ii = [-12, -12, -12, -12, -12, -10, -10, -10, -10, -8, -8, -6, -6, -6, -6, -5, -4, -4, -4, -3, -3, -3, -3, -2, -2, -1, 0, 2, 2, 5, 6, 8, 10, 14, 14]
        Ji = [2, 10, 12, 14, 20, 2, 10, 14, 18, 2, 8, 2, 6, 7, 8, 10, 4, 5, 8, 1, 3, 5, 6, 0, 1, 0, 3, 0, 1, 0, 1, 1, 1, 3, 7]
        ni = [1.25244360717979E-13, -0.0126599322553713, 5.06878030140626, 31.7847171154202, -391041.161399932, -9.75733406392044E-11, -18.6312419488279, 510.973543414101, 373847.005822362, 2.99804024666572E-08, 20.0544393820342, -4.98030487662829E-06, -10.230180636003, 55.2819126990325, -206.211367510878, -7940.12232324823, 7.82248472028153, -58.6544326902468, 3550.73647696481, -0.000115303107290162, -1.75092403171802, 257.98168774816, -727.048374179467, 0.000121644822609198, 0.0393137871762692, 0.00704181005909296, -82.910820069811, -0.26517881813125, 13.7531682453991, -52.2394090753046, 2405.56298941048, -22736.1631268929, 89074.6343932567, -23923456.5822486, 5687958081.29714]
        sigma = entropy / 5.3
        eta = enthalpy / 2800
        pressure = 0

        for i in range(0,34):
            pressure += ni[i] * (eta - 0.681) ** Ii[i] * (sigma - 0.792) ** Ji[i]

        return 16.6 / pressure

def h3_pT(pressure, temperature):    
    if pressure < 22.06395:
        Ts = T4_p(pressure)
        if temperature <= Ts:
            high_bound = h4L_p(pressure)
            low_bound = h1_pT(pressure, 623.15)
        else:
            low_bound = h4V_p(pressure)
            high_bound = h2_pT(pressure, B23T_p(pressure))
    else:
       low_bound = h1_pT(pressure, 623.15)
       high_bound = h2_pT(pressure, B23T_p(pressure))
    
    Ts = temperature + 1

    while abs(temperature - Ts) > 10 ** (-6):
        hs = (low_bound + high_bound) / 2
        Ts = T3_ph(pressure, hs)
        if Ts > temperature:
           high_bound = hs
        else:
           low_bound = hs

    return hs

def T3_prho(pressure, rho):
    low_bound= 623.15
    high_bound = 1073.15
    while abs(pressure - ps) > 10 ** (-8):
        Ts = (low_bound + high_bound) / 2
        ps = p3_rhoT(rho, Ts)
        if ps > pressure:
           high_bound = Ts
        else:
           low_bound = Ts
        
    return Ts

# REGION 4

def p4_T(temperature):

    teta = temperature - 0.23855557567849 / (temperature - 650.17534844798)
    a = teta ** 2 + 1167.0521452767 * teta - 724213.16703206
    b = -17.073846940092 * teta ** 2 + 12020.82470247 * teta - 3232555.0322333
    c = 14.91510861353 * teta ** 2 - 4823.2657361591 * teta + 405113.40542057

    return (2 * c / (-b + (b ** 2 - 4 * a * c) ** 0.5)) ** 4

def T4_p(pressure):
    beta = pressure ** 0.25
    e = beta ** 2 - 17.073846940092 * beta + 14.91510861353
    f = 1167.0521452767 * beta ** 2 + 12020.82470247 * beta - 4823.2657361591
    g = -724213.16703206 * beta ** 2 - 3232555.0322333 * beta + 405113.40542057
    d = 2 * g / (-f - (f ** 2 - 4 * e * g) ** 0.5)
    temperature = (650.17534844798 + d - (
            (650.17534844798 + d) ** 2 - 4 * (-0.23855557567849 + 650.17534844798 * d)) ** 0.5) / 2

    return temperature

def h4_s(entropy):
  
    if entropy > -0.0001545495919 and entropy <= 3.77828134:
        Ii = [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 7, 8, 12, 12, 14, 14, 16, 20, 20, 22, 24, 28, 32, 32]
        Ji = [14, 36, 3, 16, 0, 5, 4, 36, 4, 16, 24, 18, 24, 1, 4, 2, 4, 1, 22, 10, 12, 28, 8, 3, 0, 6, 8]
        ni = [0.332171191705237, 0.000611217706323496, -8.82092478906822, -0.45562819254325, -2.63483840850452E-05, -22.3949661148062, -4.28398660164013, -0.616679338856916, -14.682303110404, 284.523138727299, -113.398503195444, 1156.71380760859, 395.551267359325, -1.54891257229285, 19.4486637751291, -3.57915139457043, -3.35369414148819, -0.66442679633246, 32332.1885383934, 3317.66744667084, -22350.1257931087, 5739538.75852936, 173.226193407919, -0.0363968822121321, 8.34596332878346E-07, 5.03611916682674, 65.5444787064505]
        sigma = entropy / 3.8
        eta = 0

        for i in range(0, 26):
            eta = eta + ni[i] * (sigma - 1.09) ** Ii[i] * (sigma + 3.66E-05) ** Ji[i]
        
        return eta * 1700
    
    elif 3.77828134 < entropy < 4.41202148223476:
        Ii = [0, 0, 0, 0, 2, 3, 4, 4, 5, 5, 6, 7, 7, 7, 10, 10, 10, 32, 32]
        Ji = [1, 4, 10, 16, 1, 36, 3, 16, 20, 36, 4, 2, 28, 32, 14, 32, 36, 0, 6]
        ni = [0.822673364673336, 0.181977213534479, -0.011200026031362, -0.000746778287048033, -0.179046263257381, 0.0424220110836657, -0.341355823438768, -2.09881740853565, -8.22477343323596, -4.99684082076008, 0.191413958471069, 0.0581062241093136, -1655.05498701029, 1588.70443421201, -85.0623535172818, -31771.4386511207, -94589.0406632871, -1.3927384708869E-06, 0.63105253224098]
        sigma = entropy / 3.8
        eta = 0

        for i in range(0, 18):
            eta = eta + ni[i] * (sigma - 1.09) ** Ii[i] * (sigma + 3.66E-05) * Ji[i]
        
        return eta * 1700
    
    elif 4.41202148223476 < entropy <= 5.85:
        Ii = [0, 0, 0, 1, 1, 5, 6, 7, 8, 8, 12, 16, 22, 22, 24, 36]
        Ji = [0, 3, 4, 0, 12, 36, 12, 16, 2, 20, 32, 36, 2, 32, 7, 20]
        ni = [1.04351280732769, -2.27807912708513, 1.80535256723202, 0.420440834792042, -105721.24483466, 4.36911607493884E+24, -328032702839.753, -6.7868676080427E+15, 7439.57464645363, -3.56896445355761E+19, 1.67590585186801E+31, -3.55028625419105E+37, 396611982166.538, -4.14716268484468E+40, 3.59080103867382E+18, -1.16994334851995E+40]
        sigma = entropy / 5.9
        eta = 0

        for i in range(0, 15):
            eta = eta + ni[i] * (sigma - 1.02) ** Ii[i] * (sigma - 0.726) ** Ji[i]

        return eta ** 4 * 2800
    
    elif 5.85 < entropy < 9.155759395:
        Ii = [1, 1, 2, 2, 4, 4, 7, 8, 8, 10, 12, 12, 18, 20, 24, 28, 28, 28, 28, 28, 32, 32, 32, 32, 32, 36, 36, 36, 36, 36]
        Ji = [8, 24, 4, 32, 1, 2, 7, 5, 12, 1, 0, 7, 10, 12, 32, 8, 12, 20, 22, 24, 2, 7, 12, 14, 24, 10, 12, 20, 22, 28]
        ni = [-524.581170928788, -9269472.18142218, -237.385107491666, 21077015581.2776, -23.9494562010986, 221.802480294197, -5104725.33393438, 1249813.96109147, 2000084369.96201, -815.158509791035, -157.612685637523, -11420042233.2791, 6.62364680776872E+15, -2.27622818296144E+18, -1.71048081348406E+31, 6.60788766938091E+15, 1.66320055886021E+22, -2.18003784381501E+29, -7.87276140295618E+29, 1.51062329700346E+31, 7957321.70300541, 1.31957647355347E+15, -3.2509706829914E+23, -4.18600611419248E+25, 2.97478906557467E+34, -9.53588761745473E+19, 1.66957699620939E+24, -1.75407764869978E+32, 3.47581490626396E+34, -7.10971318427851E+38]
        sigma1 = entropy / 5.21
        sigma2 = entropy / 9.2
        eta = 0

        for i in range(0, 29):
            eta = eta + ni[i] * (1 / sigma1 - 0.513) ** Ii[i] * (sigma2 - 0.524) ** Ji[i]
        
        return math.e ** eta * 2800
    
    else:
       return "Error"

def p4_s(entropy):
    hsat = h4_s(entropy)

    if -0.0001545495919 < entropy <= 3.77828134:
        return p1_hs(hsat, entropy)
    elif 3.77828134 < entropy <= 5.210887663:
        return p3_hs(hsat, entropy)
    elif 5.210887663 < entropy < 9.155759395:
       return p2_hs(hsat, entropy)
    else:
       return "Error"

def h4L_p(pressure):
    if 0.000611657 < pressure < 22.06395:
        Ts = T4_p(pressure)
        if pressure < 16.529:
            return h1_pT(pressure, Ts)
        else:
            low_bound = 1670.858218
            high_bound = 2087.23500164864
            ps = 0

            while abs(pressure, ps) > 10 ** (-5):
                hs = (low_bound + high_bound) / 2
                ps = p3sat_h(hs)
                if ps > pressure:
                    high_bound = hs
                else:
                   low_bound = hs
            
            return hs
    else:
       return "Error"

def h4V_p(pressure):
    if 0.000611657 < pressure < 22.06395:
        Ts = T4_p(pressure)
        if pressure < 16.529:
            return h2_pT(pressure, Ts)
        else:
            low_bound = 2087.23500164864
            high_bound = 2563.592004 + 5
            ps = 0
            while abs(pressure - ps) > 10 ** (-6):
                hs = (low_bound - high_bound) / 2
                ps = p3sat_h(hs)
                if ps < pressure:
                    high_bound = hs
                else:
                   low_bound = hs
            
            return hs
        
    else:
       return "Error"

def x4_ph(pressure, enthalpy):
    h4v = h4V_p(pressure)
    h4l = h4L_p(pressure)
    if enthalpy > h4v:
        return 1
    elif enthalpy < h4l:
        return 0
    else:
        return (enthalpy - h4l) / (h4v - h4l)

def x4_ps(pressure, entropy):
    if pressure < 16.529:
        ssV = s2_pT(pressure, T4_p(pressure))
        ssL = s1_pT(pressure, T4_p(pressure))
    else:
        ssV = s3_rhoT(1 / (v3_ph(pressure, h4V_p(pressure))), T4_p(pressure))
        ssL = s3_rhoT(1 / (v3_ph(pressure, h4L_p(pressure))), T4_p(pressure))    

    if entropy < ssL:
        return 0
    elif entropy > ssV:
        return 1
    else:
        return (entropy - ssL) / (ssV - ssL)

def T4_hs(enthalpy, entropy):
    Ii = [0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 8, 10, 10, 12, 14, 14, 16, 16, 18,
               18, 18, 20, 28]
    Ji = [0, 3, 12, 0, 1, 2, 5, 0, 5, 8, 0, 2, 3, 4, 0, 1, 1, 2, 4, 16, 6, 8, 22, 1, 20, 36, 24, 1, 28, 12, 32, 14,
               22, 36, 24, 36]
    ni = [0.179882673606601, -0.267507455199603, 1.162767226126, 0.147545428713616, -0.512871635973248,
               0.421333567697984, 0.56374952218987, 0.429274443819153, -3.3570455214214, 10.8890916499278,
               -0.248483390456012, 0.30415322190639, -0.494819763939905, 1.07551674933261, 0.0733888415457688,
               0.0140170545411085, -0.106110975998808, 0.0168324361811875, 1.25028363714877, 1013.16840309509,
               -1.51791558000712, 52.4277865990866, 23049.5545563912, 0.0249459806365456, 2107964.67412137,
               366836848.613065, -144814105.365163, -0.0017927637300359, 4899556021.00459, 471.262212070518,
               -82929439019.8652, -1715.45662263191, 3557776.82973575, 586062760258.436, -12988763.5078195,
               31724744937.1057]

    if 5.210887825 < entropy < 9.15546555571324:
        sigma = entropy / 9.2
        eta = enthalpy / 2800
        teta = 0

        for i in range(0,35):
            teta = teta + ni[i] * (eta - 0.119) ** Ii[i] * (sigma - 1.07) ** Ji[i]

        return teta * 550

    else:

        if -0.0001545495919 < entropy <= 3.77828134:
            low_bound = 0.000611
            high_bound = 165.291642526045

            while abs(hL - enthalpy) > 10 ** (-5) and abs(high_bound - low_bound) > 0.0001:
                pl = (low_bound + high_bound) / 2
                Ts = T4_p(pl)
                hL = h1_pT(pl, Ts)

                if hL > enthalpy:
                    high_bound = pl
                else:
                    low_bound = pl

        elif 3.77828134 < entropy <= 4.41202148223476:
            pl = p3sat_h(enthalpy)

        elif 4.41202148223476 < entropy <= 5.210887663:
            pl = p3sat_h(enthalpy)

        low_bound = 0.000611
        high_bound = pl

        while abs(entropy - ss) > 10 ** (-6) and abs(high_bound - low_bound) > 10** (-7):
            pressure = (low_bound + high_bound) / 2
            Ts = T4_p(pressure)
            xs = x4_ph(pressure, enthalpy)

            if pressure < 16.529:
                s4V = s2_pT(pressure, Ts)
                s4L = s1_pT(pressure, Ts)
            else:
                v4V = v3_ph(pressure, h4V_p(pressure))
                s4V = s3_rhoT(1 / v4V, Ts)
                v4L = v3_ph(pressure, h4L_p(pressure))
                s4L = s3_rhoT(1 / v4L, Ts)

            ss = (xs * s4V + (1 - xs) * s4L)

            if ss < entropy:
                high_bound = pressure
            else:
                low_bound = pressure

        return T4_p(pressure)


# REGION 5

def h5_pT(pressure, temperature):
    R = 0.461526

    Ji0 = [0, 1, -3, -2, -1, 2]
    ni0 = [-13.179983674201, 6.8540841634434, -0.024805148933466, 0.36901534980333, -3.1161318213925,
           -0.32961626538917]
    Iir = [1, 1, 1, 2, 3]
    Jir = [0, 1, 3, 9, 3]
    nir = [-0.00012563183589592, 0.0021774678714571, -0.004594282089991, -3.9724828359569E-06, 1.2919228289784E-07]
    tau = 1000 / temperature
    gamma0_tau = 0

    for i in range(0, 5):
        gamma0_tau += ni0[i] * Ji0[i] * tau ** (Ji0[i] - 1)

    gammar_tau = 0

    for i in range(0, 4):
        gammar_tau += nir[i] * pressure ** Iir[i] * Jir[i] * tau ** (Jir[i] - 1)

    return R * temperature * tau * (gamma0_tau + gammar_tau)

def v5_pT(pressure, temperature):
    R = 0.461526
    Ji0 = [0, 1, -3, -2, -1, 2]
    ni0 = [-13.179983674201, 6.8540841634434, -0.024805148933466, 0.36901534980333, -3.1161318213925, -0.32961626538917]
    Iir = [1, 1, 1, 2, 3]
    Jir = [0, 1, 3, 9, 3]
    nir = [-0.00012563183589592, 0.0021774678714571, -0.004594282089991, -3.9724828359569E-06, 1.2919228289784E-07]
    tau = 1000 / temperature
    gamma0_pi = 1 / pressure
    gammar_pi = 0

    for i in range(0, 4):
        gammar_pi = gammar_pi + nir[i] * Iir[i] * pressure ** (Iir[i] - 1) * tau ** Jir[i]
    
    return R * temperature / pressure * pressure * (gamma0_pi + gammar_pi) / 1000

def u5_pT(pressure, temperature):
    R = 0.461526

    Ji0 = [0, 1, -3, -2, -1, 2]
    ni0 = [-13.179983674201, 6.8540841634434, -0.024805148933466, 0.36901534980333, -3.1161318213925, -0.32961626538917]
    Iir = [1, 1, 1, 2, 3]
    Jir = [0, 1, 3, 9, 3]
    nir = [-0.00012563183589592, 0.0021774678714571, -0.004594282089991, -3.9724828359569E-06, 1.2919228289784E-07]
    tau = 1000 / temperature
    gamma0_pi = 1 / pressure
    gamma0_tau = 0

    for i in range(0, 5):
        gamma0_tau = gamma0_tau + ni0[i] * Ji0[i] * tau ** (Ji0[i] - 1)
    
    gammar_pi = 0
    gammar_tau = 0

    for i in range(0, 4):
        gammar_pi = gammar_pi + nir[i] * Iir[i] * pressure ** (Iir[i] - 1) * tau ** Jir[i]
        gammar_tau = gammar_tau + nir[i] * pressure ** Iir[i] * Jir[i] * tau ** (Jir[i] - 1)
    
    return R * temperature * (tau * (gamma0_tau + gammar_tau) - pressure * (gamma0_pi + gammar_pi))

def Cp5_pT(pressure, temperature):
    R = 0.461526
    Ji0 = [0, 1, -3, -2, -1, 2]
    ni0 = [-13.179983674201, 6.8540841634434, -0.024805148933466, 0.36901534980333, -3.1161318213925, -0.32961626538917]
    Iir = [1, 1, 1, 2, 3]
    Jir = [0, 1, 3, 9, 3]
    nir = [-0.00012563183589592, 0.0021774678714571, -0.004594282089991, -3.9724828359569E-06, 1.2919228289784E-07]
    tau = 1000 / temperature
    gamma0_tautau = 0

    for i in range(0, 5):
        gamma0_tautau = gamma0_tautau + ni0[i] * Ji0[i] * (Ji0[i] - 1) * tau ** (Ji0[i] - 2)
    
    gammar_tautau = 0
    
    for i in range(0, 4):
        gammar_tautau = gammar_tautau + nir[i] * pressure ** Iir[i] * Jir[i] * (Jir[i] - 1) * tau ** (Jir[i] - 2)
    
    return -R * tau ** 2 * (gamma0_tautau + gammar_tautau)

def s5_pT(pressure, temperature):

    R = 0.461526

    Ji0 = [0, 1, -3, -2, -1, 2]
    ni0 = [-13.179983674201, 6.8540841634434, -0.024805148933466, 0.36901534980333, -3.1161318213925,
           -0.32961626538917]
    Iir = [1, 1, 1, 2, 3]
    Jir = [0, 1, 3, 9, 3]
    nir = [-0.00012563183589592, 0.0021774678714571, -0.004594282089991, -3.9724828359569E-06, 1.2919228289784E-07]

    tau = 1000 / temperature
    gamma0 = math.log(pressure)
    gamma0_tau = 0

    for i in range(0, 5):
        gamma0_tau += ni0[i] * Ji0[i] * tau ** (Ji0[i] - 1)
        gamma0 += ni0[i] * tau ** Ji0[i]

    gammar = 0
    gammar_tau = 0

    for i in range(0, 4):
        gammar += nir[i] * pressure ** Iir[i] * tau ** Jir[i]
        gammar_tau += nir[i] * pressure ** Iir[i] * Jir[i] * tau ** (Jir[i] - 1)


    return R * (tau * (gamma0_tau + gammar_tau) - (gamma0 + gammar))

def Cv5_pT(pressure, temperature):
    R = 0.461526
    Ji0 = [0, 1, -3, -2, -1, 2]
    ni0 = [-13.179983674201, 6.8540841634434, -0.024805148933466, 0.36901534980333, -3.1161318213925, -0.32961626538917]
    Iir = [1, 1, 1, 2, 3]
    Jir = [0, 1, 3, 9, 3]
    nir = [-0.00012563183589592, 0.0021774678714571, -0.004594282089991, -3.9724828359569E-06, 1.2919228289784E-07]
    tau = 1000 / temperature
    gamma0_tautau = 0

    for i in range(0, 5):
        gamma0_tautau = gamma0_tautau + ni0[i] * (Ji0[i] - 1) * Ji0(i) * tau ** (Ji0[i] - 2)

    gammar_pi = 0
    gammar_pitau = 0
    gammar_pipi = 0
    gammar_tautau = 0

    for i in range(0, 4):
        gammar_pi = gammar_pi + nir[i] * Iir[i] * pressure ** (Iir[i] - 1) * tau * Jir[i]
        gammar_pitau = gammar_pitau + nir[i] * Iir[i] * pressure ** (Iir[i] - 1) * Jir(i) * tau ** (Jir[i] - 1)
        gammar_pipi = gammar_pipi + nir[i] * Iir[i] * (Iir[i] - 1) * pressure ** (Iir[i] - 2) * tau ** Jir[i]
        gammar_tautau = gammar_tautau + nir[i] * pressure ** Iir[i] * Jir[i] * (Jir[i] - 1) * tau ** (Jir[i] - 2)
    
    return R * (-(tau ** 2 * (gamma0_tautau + gammar_tautau)) - (1 + pressure * gammar_pi - tau * pressure * gammar_pitau) ** 2 / (1 - pressure ** 2 * gammar_pipi))

def w5_pT(pressure, temperature):
    R = 0.461526

    Ji0 = [0, 1, -3, -2, -1, 2]
    ni0 = [-13.179983674201, 6.8540841634434, -0.024805148933466, 0.36901534980333, -3.1161318213925, -0.32961626538917]
    Iir = [1, 1, 1, 2, 3]
    Jir = [0, 1, 3, 9, 3]
    nir = [-0.00012563183589592, 0.0021774678714571, -0.004594282089991, -3.9724828359569E-06, 1.2919228289784E-07]
    tau = 1000 / temperature
    gamma0_tautau = 0

    for i in range(0, 5):
        gamma0_tautau = gamma0_tautau + ni0[i] * (Ji0[i] - 1) * Ji0[i] * tau ** (Ji0[i] - 2)

    gammar_pi = 0
    gammar_pitau = 0
    gammar_pipi = 0
    gammar_tautau = 0
    for i in range(0, 4):
        gammar_pi = gammar_pi + nir[i] * Iir[i] * pressure ** (Iir[i] - 1) * tau ** Jir[i]
        gammar_pitau = gammar_pitau + nir[i] * Iir[i] * pressure ** (Iir[i] - 1) * Jir[i] * tau ** (Jir[i] - 1)
        gammar_pipi = gammar_pipi + nir[i] * Iir[i] * (Iir[i] - 1) * pressure ** (Iir[i] - 2) * tau ** Jir[i]
        gammar_tautau = gammar_tautau + nir[i] * pressure ** Iir[i] * Jir[i] * (Jir[i] - 1) * tau ** (Jir[i] - 2)
    
    return (1000 * R * temperature * (1 + 2 * pressure * gammar_pi + pressure ** 2 * gammar_pi ** 2) / ((1 - pressure ** 2 * gammar_pipi) + (1 + pressure * gammar_pi - tau * pressure * gammar_pitau) ** 2 / (tau ** 2 * (gamma0_tautau + gammar_tautau)))) ** 0.5
    
def T5_ph(pressure, enthalpy):
    low_bound = 1073.15
    high_bound = 2273.15
    hs = 0

    while abs(enthalpy - hs) > 1 ** -5:
        Ts = (low_bound + high_bound) / 2
        hs = h5_pT(pressure, Ts)
        if hs > enthalpy:
            high_bound = Ts
        else:
            low_bound = Ts

    return Ts

def T5_ps(pressure, entropy):

    low_bound = 1073.15
    high_bound = 2273.15

    ss = 0

    while abs(entropy - ss) > 1E-05:
        Ts = (low_bound + high_bound) / 2
        ss = s5_pT(pressure, Ts)

        if ss > entropy:
            high_bound = Ts

        else:
            low_bound = Ts

    return Ts

def T5_prho(pressure, rho):   
    low_bound = 1073.15
    high_bound = 2073.15

    rhos = 0
    while abs(rho - rhos) > 10 ** (-6):
        Ts = (low_bound + high_bound) / 2
        rhos = 1 / v2_pT(pressure, Ts)
        if rhos < rho:
            high_bound = Ts
        else:
            low_bound = Ts
    
    return Ts